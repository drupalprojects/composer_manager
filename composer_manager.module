<?php

/**
 * @file
 * Provides consolidated management of third-party Composer-compatible packages
 * required by contributed modules.
 */

/**
 * Implements hook_menu().
 */
function composer_manager_menu() {
  $items = array();

  $items['admin/config/system/composer-manager'] = array(
    'title' => 'Composer Manager',
    'description' => 'View the status of packages managed by Composer and configure the location of the composer.json file and verdor directory.',
    'route_name' => 'composer_manager.packages_page',
  );

  return $items;
}

/**
 * Implements hook_menu_link_defaults().
 */
function mymodule_menu_link_defaults() {
  $links = array();

  $links['system.admin.config.system.composer_manager'] = array(
    'link_title' => 'Composer Manager',
    'description' => 'View the status of packages managed by Composer and configure the location of the composer.json file and verdor directory.',
    'parent' => 'system.admin.config.system',
    'route_name' => 'composer_manager.packages_page',
  );

  return $links;
}

/**
 * Implements hook_modules_installed().
 *
 * @see composer_manager_write_if_changed()
 */
function composer_manager_modules_installed($modules) {
  composer_manager_write_if_changed($modules);
}

/**
 * Implements hook_modules_uninstalled().
 *
 * @see composer_manager_write_if_changed()
 */
function composer_manager_modules_uninstalled($modules) {
  composer_manager_write_if_changed($modules);
}

/**
 * Writes the composer.json file if one of the enabled / disabled modules
 * has a composer.json file.
 *
 * This is a primitive check to ensure that the composer.json file is built only
 * when it has changes. This check always passes when run via the command line,
 * as it is assumed that Drush is being used to enable or disable the the
 * modules.
 *
 * @param array $modules
 *   The enabled / disabled modules being scanned for a composer.json file.
 */
function composer_manager_write_if_changed(array $modules) {
  /* @var $packages Drupal\composer_manager\ComposerPackagesInterface */
  $packages = Drupal::service('composer_manager.packages');
  if ($packages->getManager()->autobuildComposerJsonFile() && $packages->haveChanges($modules)) {
    $packages->writeComposerJsonFile();
  }
}
